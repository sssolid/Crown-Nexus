app.core.permissions.checker
============================

.. py:module:: app.core.permissions.checker


Attributes
----------

.. autoapisummary::

   app.core.permissions.checker.logger
   app.core.permissions.checker.permissions


Classes
-------

.. autoapisummary::

   app.core.permissions.checker.PermissionChecker


Module Contents
---------------

.. py:data:: logger

.. py:class:: PermissionChecker

   Permission checker for authorization control.

   This class provides methods to check if a user has the required permissions
   for a given action.


   .. py:method:: has_permission(user, permission)
      :staticmethod:


      Check if a user has a specific permission.

      Args:
          user: User to check
          permission: Required permission

      Returns:
          bool: True if user has the permission



   .. py:method:: has_permissions(user, permissions, require_all = True)
      :staticmethod:


      Check if a user has multiple permissions.

      Args:
          user: User to check
          permissions: Required permissions
          require_all: Whether all permissions are required (AND) or any (OR)

      Returns:
          bool: True if user has the required permissions



   .. py:method:: check_object_permission(user, obj, permission, owner_field = 'created_by_id')
      :staticmethod:


      Check if a user has permission for a specific object.

      This allows for object-level permissions where users can perform actions
      on objects they own, even if they don't have the global permission.

      Args:
          user: User to check
          obj: Object to check permissions for
          permission: Required permission
          owner_field: Field name that contains the owner ID

      Returns:
          bool: True if user has permission



   .. py:method:: ensure_object_permission(user, obj, permission, owner_field = 'created_by_id')
      :staticmethod:


      Ensure a user has permission for a specific object.

      Args:
          user: User to check
          obj: Object to check permissions for
          permission: Required permission
          owner_field: Field name that contains the owner ID

      Raises:
          PermissionDeniedException: If user doesn't have permission



.. py:data:: permissions

