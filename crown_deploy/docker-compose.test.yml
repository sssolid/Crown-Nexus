version: '3.8'

services:
  # Base server image that will be used for all servers
  server-base:
    build:
      context: ./tests/docker
      dockerfile: Dockerfile
    image: crown-test-server:latest

  # Server 1 - Primary server
  server1:
    image: crown-test-server:latest
    hostname: server1
    container_name: crown-test-server1
    networks:
      crown-test-network:
        ipv4_address: 172.28.1.10
    volumes:
      - ./test-ssh-keys/id_rsa.pub:/home/crown_test/.ssh/authorized_keys:ro
    ports:
      - "2201:22"  # Map a different port for SSH

  # Server 2 - Secondary server
  server2:
    image: crown-test-server:latest
    hostname: server2
    container_name: crown-test-server2
    networks:
      crown-test-network:
        ipv4_address: 172.28.1.11
    volumes:
      - ./test-ssh-keys/id_rsa.pub:/home/crown_test/.ssh/authorized_keys:ro
    ports:
      - "2202:22"  # Map a different port for SSH

  # Server 3 - Tertiary server
  server3:
    image: crown-test-server:latest
    hostname: server3
    container_name: crown-test-server3
    networks:
      crown-test-network:
        ipv4_address: 172.28.1.12
    volumes:
      - ./test-ssh-keys/id_rsa.pub:/home/crown_test/.ssh/authorized_keys:ro
    ports:
      - "2203:22"  # Map a different port for SSH

  # Test runner service
  test-runner:
    build:
      context: .
      dockerfile: tests/docker/TestRunner.Dockerfile
    container_name: crown-test-runner
    volumes:
      - .:/app  # Mount the whole project
      - ./test-ssh-keys:/root/.ssh:ro  # Mount SSH keys
    networks:
      - crown-test-network
    depends_on:
      - server1
      - server2
      - server3
    environment:
      - SERVER1_IP=172.28.1.10
      - SERVER2_IP=172.28.1.11
      - SERVER3_IP=172.28.1.12
      - SSH_USER=crown_test
      - TEST_MODE=true
    command: python -m tests.docker_test_runner

networks:
  crown-test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.1.0/24
