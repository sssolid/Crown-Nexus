version: '3.8'

services:
  # Server base image build
  server-base:
    build:
      context: ./tests/docker
      dockerfile: server.Dockerfile
    image: crown-test-server:latest

  # Server 1 (Database role - PostgreSQL + Redis)
  server1:
    image: crown-test-server:latest
    hostname: server1
    container_name: crown-test-server1
    privileged: true
    networks:
      crown-test-network:
        ipv4_address: 172.28.1.10
    ports:
      - "2201:22"
      - "5432:5432"  # PostgreSQL
      - "6379:6379"  # Redis
    environment:
      - SERVER_ROLE=database
    healthcheck:
      test: ["CMD", "systemctl", "is-system-running"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - postgres_data:/var/lib/postgresql/data
      - redis_data:/var/lib/redis
    depends_on:
      - server-base

  # Server 2 (Backend + Elasticsearch role)
  server2:
    image: crown-test-server:latest
    hostname: server2
    container_name: crown-test-server2
    privileged: true
    networks:
      crown-test-network:
        ipv4_address: 172.28.1.11
    ports:
      - "2202:22"
      - "8000:8000"  # Backend API
      - "9200:9200"  # Elasticsearch
      - "9300:9300"  # Elasticsearch transport
    environment:
      - SERVER_ROLE=backend
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - ELASTIC_PASSWORD=crown_elastic_password
      - DB_HOST=server1
      - DB_PORT=5432
      - DB_USER=crown_user
      - DB_PASSWORD=crown_password
      - DB_NAME=crown_nexus
      - REDIS_HOST=server1
      - REDIS_PORT=6379
      - ES_HOST=localhost
      - ES_PORT=9200
    healthcheck:
      test: ["CMD", "systemctl", "is-system-running"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - elasticsearch_data:/var/lib/elasticsearch
      - ./backend:/app/backend
    depends_on:
      - server-base

  # Server 3 (Frontend role - Vue 3 + Nginx)
  server3:
    image: crown-test-server:latest
    hostname: server3
    container_name: crown-test-server3
    privileged: true
    networks:
      crown-test-network:
        ipv4_address: 172.28.1.12
    ports:
      - "2203:22"
      - "80:80"      # Nginx / Vue frontend
    environment:
      - SERVER_ROLE=frontend
      - BACKEND_URL=http://server2:8000
    healthcheck:
      test: ["CMD", "systemctl", "is-system-running"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - ./frontend:/app/frontend
    depends_on:
      - server-base

  # Test runner service
  test-runner:
    build:
      context: .
      dockerfile: tests/docker/test_runner.Dockerfile
    container_name: crown-test-runner
    volumes:
      - .:/app
      - test-deployment-volume:/app/test-deployment
      - /var/run/docker.sock:/var/run/docker.sock
      - ./test-output:/test-output
    working_dir: /app
    networks:
      - crown-test-network
    depends_on:
      - server-base
      - server1
      - server2
      - server3
    environment:
      - SERVER1_IP=172.28.1.10
      - SERVER2_IP=172.28.1.11
      - SERVER3_IP=172.28.1.12
      - SSH_USER=crown_test
      - TEST_MODE=true
      - PYTHONPATH=/app
      - FULL_DEPLOYMENT=true
    command: bash /app/tests/docker/test_runner.sh

networks:
  crown-test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.1.0/24

volumes:
  test-deployment-volume:
  postgres_data:
  redis_data:
  elasticsearch_data:
