#!/bin/bash
# Security hardening script for Crown Nexus servers
# Generated by Crown Nexus Deployment System

set -e

echo "=== Applying security hardening measures ==="

# Configure SSH
echo "Securing SSH configuration..."
sudo sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin no/' /etc/ssh/sshd_config
sudo sed -i 's/#PasswordAuthentication yes/PasswordAuthentication no/' /etc/ssh/sshd_config
sudo sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/' /etc/ssh/sshd_config
sudo systemctl restart ssh || sudo systemctl restart sshd

echo "[INFO] Installing unattended-upgrades and related tools..."
sudo DEBIAN_FRONTEND=noninteractive apt-get update
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y unattended-upgrades apt-listchanges

echo "[INFO] Enabling unattended-upgrades (non-interactive)..."
echo 'unattended-upgrades unattended-upgrades/enable_auto_updates boolean true' | sudo debconf-set-selections

echo "[INFO] Configuring periodic APT updates..."
sudo tee /etc/apt/apt.conf.d/20auto-upgrades > /dev/null <<'EOF'
APT::Periodic::Update-Package-Lists "1";
APT::Periodic::Download-Upgradeable-Packages "1";
APT::Periodic::AutocleanInterval "7";
APT::Periodic::Unattended-Upgrade "1";
EOF

echo "[INFO] Configuring unattended-upgrades (security-only, no auto-reboot)..."
sudo tee /etc/apt/apt.conf.d/50unattended-upgrades > /dev/null <<'EOF'
Unattended-Upgrade::Allowed-Origins {
    "${distro_id}:${distro_codename}-security";
};

Unattended-Upgrade::Remove-Unused-Dependencies "true";
Unattended-Upgrade::Automatic-Reboot "false";
Unattended-Upgrade::Mail "root";
Unattended-Upgrade::MailOnlyOnError "true";
EOF

echo "[INFO] Reloading systemd timers and services..."
sudo systemctl daemon-reexec
sudo systemctl restart unattended-upgrades.service || true

echo "[INFO] Setup complete. Security updates will be applied automatically without reboots."

# Configure fail2ban
echo "Configuring fail2ban..."
if ! dpkg -l | grep -q fail2ban; then
    sudo apt install -y fail2ban
fi

sudo tee /etc/fail2ban/jail.local > /dev/null << 'EOF'
[DEFAULT]
bantime = 86400
findtime = 3600
maxretry = 5

[sshd]
enabled = true

[nginx-http-auth]
enabled = true
EOF

sudo systemctl enable fail2ban
sudo systemctl restart fail2ban

# Configure system security settings
echo "Configuring system security settings..."
sudo tee /etc/sysctl.d/99-security.conf > /dev/null << 'EOF'
# IP Spoofing protection
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

# Ignore ICMP broadcast requests
net.ipv4.icmp_echo_ignore_broadcasts = 1

# Disable source packet routing
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

# Ignore send redirects
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

# Block SYN attacks
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_max_syn_backlog = 2048
net.ipv4.tcp_synack_retries = 2
net.ipv4.tcp_syn_retries = 5

# Log Martians
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

# Disable IP forwarding
net.ipv4.ip_forward = 0
EOF

sudo sysctl -p /etc/sysctl.d/99-security.conf

# Secure shared memory
echo "Securing shared memory..."
if ! grep -q "/run/shm" /etc/fstab; then
    echo "tmpfs /run/shm tmpfs defaults,noexec,nosuid 0 0" | sudo tee -a /etc/fstab
fi

# Setup UFW (Uncomplicated Firewall)
echo "Setting up basic firewall rules..."
sudo ufw allow OpenSSH
sudo ufw --force enable

# Setup logwatch for log monitoring
echo "Setting up log monitoring..."
sudo apt install -y logwatch
sudo tee /etc/cron.daily/00logwatch > /dev/null << 'EOF'
#!/bin/bash
/usr/sbin/logwatch --output mail --mailto {{ cluster.deployment_config.admin_email }} --detail high
EOF
sudo chmod +x /etc/cron.daily/00logwatch

# Enable process accounting
echo "Enabling process accounting..."
sudo apt install -y acct
sudo systemctl enable acct
sudo systemctl start acct

# Remove unnecessary services
echo "Removing unnecessary services..."
unnecessary_packages=("telnet" "rsh-server" "rsh-client" "xinetd" "nis" "tftpd" "atftpd")
for package in "${unnecessary_packages[@]}"; do
    if dpkg -l | grep -q "^ii.*$package "; then
        sudo apt remove -y "$package"
    fi
done

echo "=== Security hardening completed ==="
