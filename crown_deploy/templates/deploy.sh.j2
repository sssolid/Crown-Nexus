#!/bin/bash
# Master deployment script for Crown Nexus
# This script orchestrates the entire multi-server deployment process
# Generated by Crown Nexus Deployment System

set -e  # Exit on any error

echo "=== Crown Nexus Deployment ==="
echo "Started at: $(date)"
echo ""

# Load environment variables
source common/env.sh

# Check if SSH keys are set up
if [ ! -f ~/.ssh/id_rsa ]; then
    echo "SSH key not found. Creating new SSH key..."
    ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
    echo "Please ensure this SSH key is added to all servers."

    for idx in $SERVER_INDEXES; do
        var_name="SERVER${idx}_PUBLIC_IP"
        echo "Run: ssh-copy-id $SSH_USER@${!var_name}"
    done

    read -p "Press Enter once SSH keys are set up..."
fi

# Display deployment summary
echo "=== Deployment Summary ==="
echo "Domain: $CROWN_DOMAIN"
echo "Repository: $CROWN_REPO_URL (branch: $CROWN_BRANCH)"
echo "Number of servers: $SERVER_COUNT"
echo ""

for idx in $SERVER_INDEXES; do
    hostname_var="SERVER${idx}_HOSTNAME"
    ip_var="SERVER${idx}_PUBLIC_IP"
    roles_var="SERVER${idx}_ROLES"
    echo "Server $idx: ${!hostname_var} (${!ip_var})"
    echo "  - Roles: ${!roles_var}"
done

echo ""
echo "Credentials have been saved to: crown-credentials.txt"
echo ""

read -p "Continue with deployment? [y/N] " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Deployment aborted."
    exit 1
fi

# Prepare servers - copy setup scripts to servers
echo "=== Preparing Servers ==="

for idx in $SERVER_INDEXES; do
    ip_var="SERVER${idx}_PUBLIC_IP"
    hostname_var="SERVER${idx}_HOSTNAME"

    echo "Setting up connection for server $idx: ${!hostname_var} (${!ip_var})..."
    ssh-keyscan -H ${!ip_var} >> ~/.ssh/known_hosts 2>/dev/null
done

# Deploy to each server in parallel
echo "=== Starting Deployments ==="

# Create temporary directory for logs
mkdir -p ./logs

# Start deployments in parallel
for idx in $SERVER_INDEXES; do
    ip_var="SERVER${idx}_PUBLIC_IP"
    hostname_var="SERVER${idx}_HOSTNAME"

    echo "Deploying to server $idx: ${!hostname_var} (${!ip_var})..."
    (
        # Copy scripts to server
        scp -r "server${idx}" common "$SSH_USER@${!ip_var}":~/

        # Execute setup script
        ssh "$SSH_USER@${!ip_var}" "cd server${idx} && bash setup.sh" > "./logs/server${idx}.log" 2>&1

        echo "Completed deployment to server $idx: ${!hostname_var}"
    ) &

    # Store the PID for monitoring
    pids[$idx]=$!
done

# Wait for all deployments to complete
echo "Waiting for all deployments to complete..."
all_succeeded=true

for idx in $SERVER_INDEXES; do
    hostname_var="SERVER${idx}_HOSTNAME"

    # Wait for this deployment
    if wait ${pids[$idx]}; then
        echo "✅ Server $idx (${!hostname_var}) deployed successfully"
    else
        echo "❌ Server $idx (${!hostname_var}) deployment failed. See logs/server${idx}.log for details."
        all_succeeded=false
    fi
done

if $all_succeeded; then
    echo ""
    echo "=== Deployment completed successfully ==="
    echo "Crown Nexus is now available at: https://$CROWN_DOMAIN"
    echo ""
    echo "Admin login:"
    echo "  Email: $ADMIN_EMAIL"
    echo "  Password: $ADMIN_PASSWORD (saved in crown-credentials.txt)"
    echo ""
    echo "Please save the credentials file (crown-credentials.txt) in a secure location."
else
    echo ""
    echo "=== Deployment encountered issues ==="
    echo "Please check the logs for more information."
    echo "You can use the rollback.sh script to revert changes if needed."
fi
