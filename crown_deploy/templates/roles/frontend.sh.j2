## Frontend Role Configuration
echo "Setting up Frontend role on {{ server.hostname }}..."

# Install required packages
sudo apt install -y nginx nodejs npm
echo "frontend: nginx nodejs npm" >> /tmp/crown-nexus-installed/packages.txt

# Open HTTP and HTTPS ports
sudo ufw allow 80/tcp
sudo ufw allow 443/tcp

# Setup Node.js 18 (if not already installed)
if ! command -v node &> /dev/null || [[ $(node -v) != v18* ]]; then
    echo "Installing Node.js 18..."
    curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
    sudo apt update
    sudo apt install -y nodejs
    echo "nodejs18: nodejs" >> /tmp/crown-nexus-installed/packages.txt
fi

# Clone repository
echo "Cloning application repository..."
sudo -u crown git clone $CROWN_REPO_URL -b $CROWN_BRANCH /home/crown/$CROWN_APP_NAME 2>/dev/null || (
    cd /home/crown/$CROWN_APP_NAME && sudo -u crown git fetch && sudo -u crown git checkout $CROWN_BRANCH && sudo -u crown git pull
)

# Build frontend
echo "Building frontend application..."
cd /home/crown/$CROWN_APP_NAME/frontend
sudo -u crown npm install
sudo -u crown npm run build

# Determine backend servers
# Use the first backend server for API proxy
BACKEND_IP=""
{% for backend_server in cluster.get_servers_by_role(ServerRole.BACKEND) %}
  {% if loop.first %}
BACKEND_IP="{{ backend_server.ip }}"
  {% endif %}
{% endfor %}

# Configure Nginx for frontend
echo "Configuring Nginx for frontend..."
cat > /tmp/nginx-frontend-config << 'EOF'
server {
    listen 80;
    server_name $CROWN_DOMAIN www.$CROWN_DOMAIN;

    location / {
        root /home/crown/$CROWN_APP_NAME/frontend/dist;
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "public, max-age=3600";
    }

    location /api {
        proxy_pass http://$BACKEND_IP:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/v1/docs {
        proxy_pass http://$BACKEND_IP:8000/api/v1/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}
EOF

# Apply Nginx configuration
envsubst < /tmp/nginx-frontend-config > /etc/nginx/sites-available/$CROWN_APP_NAME
sudo ln -s /etc/nginx/sites-available/$CROWN_APP_NAME /etc/nginx/sites-enabled/ 2>/dev/null || true
sudo rm -f /etc/nginx/sites-enabled/default
sudo nginx -t
sudo systemctl restart nginx

# Setup SSL with Let's Encrypt if load balancer is not present
{% if ServerRole.LOAD_BALANCER not in server.assigned_roles %}
echo "Setting up SSL..."
sudo apt install -y certbot python3-certbot-nginx
echo "ssl: certbot python3-certbot-nginx" >> /tmp/crown-nexus-installed/packages.txt
sudo certbot --nginx -d $CROWN_DOMAIN -d www.$CROWN_DOMAIN --non-interactive --agree-tos --email $ADMIN_EMAIL
{% endif %}

echo "Frontend setup completed on {{ server.hostname }}"
