#!/bin/bash
# Master rollback script for Crown Nexus deployment
# This script orchestrates the rollback process across all servers
# Generated by Crown Nexus Deployment System

set -e  # Exit on any error

echo "=== Crown Nexus Rollback ==="
echo "Started at: $(date)"
echo ""

# Load environment variables
source common/env.sh

# Display rollback summary
echo "=== Rollback Summary ==="
echo "Domain: $CROWN_DOMAIN"
echo "Number of servers: $SERVER_COUNT"
echo ""

for idx in $SERVER_INDEXES; do
    hostname_var="SERVER${idx}_HOSTNAME"
    ip_var="SERVER${idx}_PUBLIC_IP"
    roles_var="SERVER${idx}_ROLES"
    echo "Server $idx: ${!hostname_var} (${!ip_var})"
    echo "  - Roles: ${!roles_var}"
done

echo ""
read -p "WARNING: This will remove all Crown Nexus components from your servers. Continue? [y/N] " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "Rollback aborted."
    exit 1
fi

# Create temporary directory for logs
mkdir -p ./rollback-logs

# Roll back each server in reverse order
# This ensures dependent services are rolled back first
echo "=== Starting Rollback ==="
for idx in $(echo $SERVER_INDEXES | tr ' ' '\n' | sort -nr); do
    ip_var="SERVER${idx}_PUBLIC_IP"
    hostname_var="SERVER${idx}_HOSTNAME"

    echo "Rolling back server $idx: ${!hostname_var} (${!ip_var})..."

    (
        # Create rollback script for this server
        cat > "server${idx}/rollback.sh" << 'EOF'
#!/bin/bash
# Rollback script for server

echo "=== Rolling back Crown Nexus components ==="

# Stop all relevant services
sudo systemctl stop crown-nexus 2>/dev/null || true
sudo systemctl disable crown-nexus 2>/dev/null || true
sudo systemctl stop nginx 2>/dev/null || true
sudo systemctl stop postgresql 2>/dev/null || true
sudo systemctl stop elasticsearch 2>/dev/null || true
sudo systemctl stop redis-server 2>/dev/null || true
sudo systemctl stop prometheus 2>/dev/null || true
sudo systemctl stop grafana-server 2>/dev/null || true

# Remove Crown Nexus files
echo "Removing application files..."
sudo rm -rf /home/crown/crown-nexus 2>/dev/null || true
sudo rm -rf /opt/crown-nexus 2>/dev/null || true

# Remove configuration files
echo "Removing configuration files..."
sudo rm -f /etc/nginx/sites-available/crown-nexus 2>/dev/null || true
sudo rm -f /etc/nginx/sites-enabled/crown-nexus 2>/dev/null || true
sudo rm -f /etc/nginx/sites-available/monitoring 2>/dev/null || true
sudo rm -f /etc/nginx/sites-enabled/monitoring 2>/dev/null || true
sudo rm -f /etc/nginx/sites-available/cicd 2>/dev/null || true
sudo rm -f /etc/nginx/sites-enabled/cicd 2>/dev/null || true
sudo rm -f /etc/systemd/system/crown-nexus.service 2>/dev/null || true
sudo systemctl daemon-reload 2>/dev/null || true

# Remove monitoring scripts
sudo rm -f /home/crown/monitor.sh 2>/dev/null || true
sudo rm -f /opt/crown-monitoring.sh 2>/dev/null || true
sudo rm -f /opt/es-monitoring.sh 2>/dev/null || true
sudo rm -f /opt/redis-monitoring.sh 2>/dev/null || true
sudo rm -f /opt/setup-grafana.sh 2>/dev/null || true

# Remove crontab entries
(crontab -l 2>/dev/null | grep -v "monitor.sh\|crown\|es\|redis\|grafana") | crontab - 2>/dev/null || true

# Stop and remove Docker containers if present
if command -v docker &> /dev/null; then
    echo "Stopping Docker containers..."
    docker stop jenkins registry sonarqube 2>/dev/null || true
    docker rm jenkins registry sonarqube 2>/dev/null || true
fi

# Note: We do not uninstall system packages to avoid affecting other applications
echo "Note: System packages were not removed to avoid affecting other applications."

echo "Rollback completed for server."
EOF

        # Make it executable
        chmod +x "server${idx}/rollback.sh"

        # Copy the rollback script to the server and execute it
        scp "server${idx}/rollback.sh" "$SSH_USER@${!ip_var}":~/rollback.sh
        ssh "$SSH_USER@${!ip_var}" "bash rollback.sh" > "./rollback-logs/server${idx}.log" 2>&1

        if [ $? -eq 0 ]; then
            echo "✅ Server $idx (${!hostname_var}) rolled back successfully"
        else
            echo "❌ Server $idx (${!hostname_var}) rollback failed. See rollback-logs/server${idx}.log for details."
            exit 1
        fi
    ) &

    # Store the PID for monitoring
    pids[$idx]=$!
done

# Wait for all rollbacks to complete
echo "Waiting for all rollbacks to complete..."
all_succeeded=true

for idx in $(echo $SERVER_INDEXES | tr ' ' '\n' | sort -nr); do
    hostname_var="SERVER${idx}_HOSTNAME"

    # Wait for this rollback
    if wait ${pids[$idx]}; then
        echo "✅ Server $idx (${!hostname_var}) rollback confirmed"
    else
        echo "❌ Server $idx (${!hostname_var}) rollback failed. See rollback-logs/server${idx}.log for details."
        all_succeeded=false
    fi
done

if $all_succeeded; then
    echo ""
    echo "=== Rollback completed successfully ==="
    echo "All Crown Nexus components have been removed from your servers."
else
    echo ""
    echo "=== Rollback encountered issues ==="
    echo "Please check the logs for more information."
    echo "Some manual cleanup may be required."
fi
