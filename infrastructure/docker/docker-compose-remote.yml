version: '3.8'

services:
  backend:
    build:
      context: ../../backend
      dockerfile: ../infrastructure/docker/Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=crown_nexus
      - ELASTICSEARCH_HOST=elasticsearch
      - REDIS_HOST=redis
    volumes:
      - ../../backend:/app
    depends_on:
      - db
      - elasticsearch
      - redis
    networks:
      - crown-nexus-network

  frontend:
    build:
      context: ../../frontend
      dockerfile: ../infrastructure/docker/Dockerfile.frontend
    ports:
      - "3000:3000"
    volumes:
      - ../../frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    networks:
      - crown-nexus-network

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=crown_nexus
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - crown-nexus-network

  elasticsearch:
    image: elasticsearch:8.9.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - crown-nexus-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - crown-nexus-network

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.core.celery_app worker --loglevel=info --concurrency=4
    volumes:
      - ./backend:/app
    environment:
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - EXCHANGE_RATE_API_KEY=${EXCHANGE_RATE_API_KEY}
      - EXCHANGE_RATE_UPDATE_FREQUENCY=${EXCHANGE_RATE_UPDATE_FREQUENCY:-24}
    depends_on:
      - redis
      - db

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.core.celery_app beat --loglevel=info
    volumes:
      - ./backend:/app
    environment:
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - EXCHANGE_RATE_API_KEY=${EXCHANGE_RATE_API_KEY}
      - EXCHANGE_RATE_UPDATE_FREQUENCY=${EXCHANGE_RATE_UPDATE_FREQUENCY:-24}
    depends_on:
      - redis
      - db

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    volumes:
      - /home/ryan/crown-nexus/infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - crown-nexus-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - crown-nexus-network


networks:
  crown-nexus-network:
    driver: bridge

volumes:
  postgres-data:
  elasticsearch-data:
  redis-data:
  grafana-data:
