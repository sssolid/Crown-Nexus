from __future__ import annotations
'\nProduct association tables.\n\nThis module defines all association tables for product relationships.\n'
from datetime import datetime
from sqlalchemy import Column, DateTime, ForeignKey, Integer, Table, func, Text
from sqlalchemy.dialects.postgresql import UUID
from app.db.base_class import Base
product_fitment_association = Table('product_fitment', Base.metadata, Column('product_id', UUID(as_uuid=True), ForeignKey('product.product.id', ondelete='CASCADE'), primary_key=True), Column('fitment_id', UUID(as_uuid=True), ForeignKey('product.fitment.id', ondelete='CASCADE'), primary_key=True), Column('created_at', DateTime(timezone=True), nullable=False, server_default=func.now()), schema='product')
product_media_association = Table('product_media', Base.metadata, Column('product_id', UUID(as_uuid=True), ForeignKey('product.product.id', ondelete='CASCADE'), primary_key=True), Column('media_id', UUID(as_uuid=True), ForeignKey('media.media.id', ondelete='CASCADE'), primary_key=True), Column('display_order', Integer, nullable=False, default=0), Column('is_primary', Integer, nullable=False, default=0), Column('created_at', DateTime(timezone=True), nullable=False, server_default=func.now()), schema='product')
product_tariff_code_association = Table('product_tariff_code', Base.metadata, Column('product_id', UUID(as_uuid=True), ForeignKey('product.product.id', ondelete='CASCADE'), primary_key=True), Column('tariff_code_id', UUID(as_uuid=True), ForeignKey('reference.tariff_code.id', ondelete='CASCADE'), primary_key=True), Column('assigned_at', DateTime(timezone=True), nullable=False, server_default=func.now()), schema='product')
product_unspsc_association = Table('product_unspsc', Base.metadata, Column('product_id', UUID(as_uuid=True), ForeignKey('product.product.id', ondelete='CASCADE'), primary_key=True), Column('unspsc_code_id', UUID(as_uuid=True), ForeignKey('reference.unspsc_code.id', ondelete='CASCADE'), primary_key=True), Column('assigned_at', DateTime(timezone=True), nullable=False, server_default=func.now()), schema='product')
product_country_origin_association = Table('product_country_origin', Base.metadata, Column('product_id', UUID(as_uuid=True), ForeignKey('product.product.id', ondelete='CASCADE'), primary_key=True), Column('country_id', UUID(as_uuid=True), ForeignKey('location.country.id', ondelete='CASCADE'), primary_key=True), Column('manufacturer_id', UUID(as_uuid=True), ForeignKey('product.manufacturer.id', ondelete='SET NULL'), nullable=True), Column('origin_type', Integer, nullable=False, default=0), Column('origin_order', Integer, nullable=False, default=0), Column('created_at', DateTime(timezone=True), nullable=False, server_default=func.now()), schema='product')
product_hardware_association = Table('product_hardware', Base.metadata, Column('product_id', UUID(as_uuid=True), ForeignKey('product.product.id', ondelete='CASCADE'), primary_key=True), Column('hardware_id', UUID(as_uuid=True), ForeignKey('reference.hardware_item.id', ondelete='CASCADE'), primary_key=True), Column('quantity', Integer, nullable=False, default=1), Column('is_optional', Integer, nullable=False, default=0), Column('created_at', DateTime(timezone=True), nullable=False, server_default=func.now()), schema='product')
product_color_association = Table('product_color', Base.metadata, Column('product_id', UUID(as_uuid=True), ForeignKey('product.product.id', ondelete='CASCADE'), primary_key=True), Column('color_id', UUID(as_uuid=True), ForeignKey('reference.color.id', ondelete='CASCADE'), primary_key=True), Column('created_at', DateTime(timezone=True), nullable=False, server_default=func.now()), schema='product')
product_construction_type_association = Table('product_construction_type', Base.metadata, Column('product_id', UUID(as_uuid=True), ForeignKey('product.product.id', ondelete='CASCADE'), primary_key=True), Column('construction_type_id', UUID(as_uuid=True), ForeignKey('reference.construction_type.id', ondelete='CASCADE'), primary_key=True), Column('created_at', DateTime(timezone=True), nullable=False, server_default=func.now()), schema='product')
product_texture_association = Table('product_texture', Base.metadata, Column('product_id', UUID(as_uuid=True), ForeignKey('product.product.id', ondelete='CASCADE'), primary_key=True), Column('texture_id', UUID(as_uuid=True), ForeignKey('reference.texture.id', ondelete='CASCADE'), primary_key=True), Column('created_at', DateTime(timezone=True), nullable=False, server_default=func.now()), schema='product')
product_packaging_association = Table('product_packaging', Base.metadata, Column('product_id', UUID(as_uuid=True), ForeignKey('product.product.id', ondelete='CASCADE'), primary_key=True), Column('packaging_type_id', UUID(as_uuid=True), ForeignKey('reference.packaging_type.id', ondelete='CASCADE'), primary_key=True), Column('created_at', DateTime(timezone=True), nullable=False, server_default=func.now()), schema='product')
product_interchange_association = Table('product_interchange', Base.metadata, Column('product_id', UUID(as_uuid=True), ForeignKey('product.product.id', ondelete='CASCADE'), primary_key=True), Column('interchange_number', Integer, nullable=False), Column('brand_id', UUID(as_uuid=True), ForeignKey('product.brand.id', ondelete='SET NULL'), nullable=True), Column('notes', Text, nullable=True), Column('created_at', DateTime(timezone=True), nullable=False, server_default=func.now()), schema='product')